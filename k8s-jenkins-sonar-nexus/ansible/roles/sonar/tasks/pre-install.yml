- name: Create namespace "{{ namespace }}"
  shell: |
    kubectl create namespace "{{ namespace }}"
  ignore_errors: yes

- name: Create "{{ WORK_FOLDER }}"
  file:
    path: "{{ WORK_FOLDER }}"
    state: directory
    mode: 0755
    owner: vagrant
    group: vagrant
  become: yes

- name: Create "{{ PGSQL_FOLDER }}"
  file:
    path: "{{ PGSQL_FOLDER }}"
    state: directory
    mode: 0755
    owner: vagrant
    group: vagrant
  become: yes

- name: Create "{{ SONAR_FOLDER }}"
  file:
    path: "{{ SONAR_FOLDER }}"
    state: directory
    mode: 0755
    owner: vagrant
    group: vagrant
  become: yes

- name: Copy '*.yml' files for deploying PGSQL
  copy:
    src: "{{ item }}"
    dest: "{{ WORK_FOLDER }}"
  with_items:
  #- pv-psql.yml
  - pvc-psql.yml
  - dep-psql.yml
  - svc-psql.yml

- name: Copy '*.yml' files for deploying SONAR
  copy:
    src: "{{ item }}"
    dest: "{{ WORK_FOLDER }}"
  with_items:
  #- pv-sonar.yml
  #- pvc-sonar.yml
  #- dep-sonar.yml
  ##- dep-sonar-hostpath.yml
  - svc-sonar.yml
  - ing-sonar.yml

- name: Make pv-psql.yml for PGSQL
  shell: |
    cat << EOF > "{{ WORK_FOLDER }}/pv-psql.yml"
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: postgresql-pv
        namespace: sonar
      spec:
        nodeAffinity:
          required:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ VOLUME_HOST }}"
        capacity:
          storage: 2Gi
        accessModes:
        - ReadWriteOnce
        persistentVolumeReclaimPolicy: Retain
        storageClassName: postgresql-storage
        local:
          path: "{{ PGSQL_VOLUME }}"
    EOF

# - name: Make pv-psql.yml for SONAR
#   shell: |
#     cat << EOF > "{{ WORK_FOLDER }}/pv-sonar.yml"
#     apiVersion: v1
#     kind: PersistentVolume
#     metadata:
#       name: sonarqube-pv-data
#       namespace: sonar
#     spec:
#       nodeAffinity:
#         required:
#           nodeSelectorTerms:
#           - matchExpressions:
#             - key: kubernetes.io/hostname
#               operator: In
#               values:
#               - "{{ VOLUME_HOST }}"
#       capacity:
#         storage: 1Gi
#       accessModes:
#       - ReadWriteOnce
#       persistentVolumeReclaimPolicy: Retain
#       storageClassName: sonarqube-data-storage
#       local:
#         path: "{{ SONAR_VOLUME }}"
#     EOF

- name: Make dep-sonar-hostpath.yml for SONAR
  shell: |
    cat << EOFDS > "{{ WORK_FOLDER }}/dep-sonar-hostpath.yml"
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: sonarqube-deployment
        namespace: sonar
        labels:
          app: sonarqube
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: sonarqube
        template:
          metadata:
            labels:
              app: sonarqube
          spec:
            containers:
            - name: sonarqube
              image: sonarqube:7.1
              env:
              - name: SONARQUBE_JDBC_USERNAME
                value: sonar
              - name: SONARQUBE_JDBC_PASSWORD
                value: sonar
              - name: SONARQUBE_JDBC_URL
                value: "jdbc:postgresql://postgresql-service:5432/sonar"
              ports:
              - name: sonarqube-port
                containerPort: 9000
              volumeMounts:
              - name: sonarqube-conf
                mountPath: "{{ SONAR_FOLDER }}/conf"
              - name: sonarqube-extensions
                mountPath: "{{ SONAR_FOLDER }}/extensions"
              - name: sonarqube-logs
                mountPath: "{{ SONAR_FOLDER }}/logs"
              - name: sonarqube-data
                mountPath: "{{ SONAR_FOLDER }}/data"
      #          mountPath: "{{ SONAR_FOLDER }}"
            volumes:
            - name: sonarqube-conf
              hostPath:
                path: "{{ SONAR_VOLUME }}/conf"
            - name: sonarqube-extensions
              hostPath:
                path: "{{ SONAR_VOLUME }}/extensions"
            - name: sonarqube-logs
              hostPath:
                path: "{{ SONAR_VOLUME }}/logs"
            - name: sonarqube-data
              hostPath:
                path: "{{ SONAR_VOLUME }}/data"
    EOFDS